name: PR's validation

on: [pull_request]

jobs:
  Prepare_environment:
    runs-on: ubuntu-latest
    container:
      image: mkoding/tfg-project:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Cache vendor
        uses: actions/cache@v3
        id: composer-cache
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}-${{ hashFiles('composer.json') }}

      - name: Install composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --no-ansi --no-interaction --no-progress --prefer-dist

  Run_linters:
    needs: Prepare_environment
    runs-on: ubuntu-latest
    container:
      image: mkoding/tfg-project:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Prepare environment file
        run: cp .env.ci .env

      - name: Cache composer
        uses: actions/cache@v3
        id: composer-cache
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}-${{ hashFiles('composer.json') }}

      - name: Install composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Composer dump autoload
        run: composer dump-autoload

      - name: Generate artisan key
        run: php artisan key:generate --ansi

      - name: Run linters
        run: ./scripts/linters.sh

      - name: Generate Doctrine Proxies
        run: php artisan doctrine:generate:proxies

  Run_unit_tests:
    needs: Prepare_environment
    runs-on: ubuntu-latest
    container:
      image: mkoding/tfg-project:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Prepare environment file
        run: cp .env.ci .env

      - name: Cache composer
        uses: actions/cache@v3
        id: composer-cache
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}-${{ hashFiles('composer.json') }}

      - name: Install composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Composer dump autoload
        run: composer dump-autoload

      - name: Generate artisan key
        run: php artisan key:generate --ansi

      - name: Run unit tests
        run: vendor/bin/paratest -c phpunit_unit.xml --runner=WrapperRunner

  Run_integration_tests:
    needs: Prepare_environment
    runs-on: ubuntu-latest
    container:
      image: mkoding/tfg-project:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Prepare environment file
        run: cp .env.ci .env

      - name: Cache composer
        uses: actions/cache@v3
        id: composer-cache
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}-${{ hashFiles('composer.json') }}

      - name: Install composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Composer dump autoload
        run: composer dump-autoload

      - name: Generate artisan key
        run: php artisan key:generate --ansi

      - name: Clear integration tests caches
        run: php artisan optimize:clear --env=ci

      - name: Run integration tests
        run: vendor/bin/paratest -c phpunit_integration.xml --runner=WrapperRunner
