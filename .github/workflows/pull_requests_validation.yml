name: PR's validation

on: [pull_request]

jobs:
  Prepare_environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare environment file
        run: cp .env.ci .env

      - name: Setup docker compose
        run: docker compose up -d

      - name: Cache vendor
        uses: actions/cache@v3
        id: composer-cache
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}-${{ hashFiles('composer.json') }}

      - name: Install composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: docker compose exec -u root app bash -c 'composer install --no-ansi --no-interaction --no-progress --prefer-dist'

      - name: Push docker compose
        uses: yu-ichiro/spin-up-docker-compose-action@main
        with:
          file: docker-compose.yml
          shared: true
          bake: true
          push: true
          up: false

  Run_linters:
    needs: Prepare_environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare environment file
        run: cp .env.ci .env

      - name: Setup docker compose
        uses: yu-ichiro/spin-up-docker-compose-action@main
        with:
          file: docker-compose.yml
          shared: true
          pull: true

      - name: Cache composer
        uses: actions/cache@v3
        id: composer-cache
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}-${{ hashFiles('composer.json') }}

      - name: Install composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: docker compose exec -u root app bash -c 'composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist'

      - name: Fix permissions
        run: docker compose exec -u root app bash -c 'chown -R laravel-docker:laravel-docker /var/www'

      - name: Composer dump autoload
        run: docker compose exec app bash -c 'composer dump-autoload'

      - name: Generate artisan key
        run: docker compose exec app bash -c 'php artisan key:generate --ansi'

      - name: Run linters
        run: docker compose exec app bash -c './scripts/linters.sh'

      - name: Generate Doctrine Proxies
        run: docker compose exec app bash -c 'php artisan doctrine:generate:proxies'

  Run_unit_tests:
    needs: Prepare_environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare environment file
        run: cp .env.ci .env

      - name: Setup docker compose
        uses: yu-ichiro/spin-up-docker-compose-action@main
        with:
          file: docker-compose.yml
          shared: true
          pull: true

      - name: Cache composer
        uses: actions/cache@v3
        id: composer-cache
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}-${{ hashFiles('composer.json') }}

      - name: Install composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: docker compose exec app -u root bash -c 'composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist'

      - name: Fix permissions
        run: docker compose exec -u root app bash -c 'chown -R laravel-docker:laravel-docker /var/www'

      - name: Composer dump autoload
        run: docker compose exec app bash -c 'composer dump-autoload'

      - name: Generate artisan key
        run: docker compose exec app bash -c 'php artisan key:generate --ansi'

      - name: Run unit tests
        run: docker compose exec app bash -c 'vendor/bin/paratest -c phpunit_unit.xml --runner=WrapperRunner'

  Run_integration_tests:
    needs: Prepare_environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare environment file
        run: cp .env.ci .env

      - name: Setup docker compose
        uses: yu-ichiro/spin-up-docker-compose-action@main
        with:
          file: docker-compose.yml
          shared: true
          pull: true

      - name: Cache composer
        uses: actions/cache@v3
        id: composer-cache
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}-${{ hashFiles('composer.json') }}

      - name: Install composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: docker compose execc -u root app bash -c 'composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist'

      - name: Fix permissions
        run: docker compose exec -u root app bash -c 'chown -R laravel-docker:laravel-docker /var/www'

      - name: Composer dump autoload
        run: docker compose exec app bash -c 'composer dump-autoload'

      - name: Generate artisan key
        run: docker compose exec app bash -c 'php artisan key:generate --ansi'

      - name: Clear integration tests caches
        run: docker compose exec app bash -c 'php artisan optimize:clear --env=ci'

      - name: Run integration tests
        run: docker compose exec app bash -c 'vendor/bin/paratest -c phpunit_integration.xml --runner=WrapperRunner'
